class Solution {
    public List<Integer> diffWaysToCompute(String expression) {
        int n = expression.length();
        List<Integer>[][] d = new ArrayList[n][n];
        return recur(expression,0,n-1,d);
    }
    public List<Integer> recur(String exp, int s, int e,List<Integer>[][] d){
        List<Integer> res = new ArrayList<>();
        if(d[s][e]!=null){
            return d[s][e];
        }
        if(s==e){
            int num = exp.charAt(s)-'0';
            res.add(num);
            return res;
        }
        if(e-s==1 && Character.isDigit(exp.charAt(s))){
            int num1 = exp.charAt(s)-'0'; 
            int num2 = exp.charAt(e)-'0';
            res.add(num1*10 + num2);
            return res;
        }
        for(int i=s;i<=e;i++){
            if(Character.isDigit(exp.charAt(i))){
                continue;
            }
            char op = exp.charAt(i);
            List<Integer> left = recur(exp,s,i-1,d);
            List<Integer> right = recur(exp,i+1,e,d);
            for(int l : left){
                for(int r : right){
                    if(op == '*'){
                        res.add(l*r);
                    }else if(op == '+'){
                        res.add(l+r);
                    }else{
                        res.add(l-r);
                    }
                }
            }
        }
        d[s][e] = res;
        return res;
    }
}
