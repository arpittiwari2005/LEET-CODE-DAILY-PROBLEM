class Solution {
public:
    int minimumDeletions(string word, int k) {
        unordered_map<char, int> freqMap;
        for (char ch : word) {
            freqMap[ch]++;
        }
        vector<int> freq;
        for (auto& [ch, count] : freqMap) {
            freq.push_back(count);
        }
        sort(freq.begin(), freq.end());
        int n = freq.size();
        int minDeletions = INT_MAX;
        for (int i = 0; i < n; ++i) {
            int base = freq[i];
            int deletions = 0;
            for (int j = 0; j < i; ++j) {
                deletions += freq[j];  // Remove all lower freq
            }
            for (int j = i+1; j < n; ++j) {
                if (freq[j] > base + k) {
                    deletions += freq[j] - (base + k);
                }
            }
            minDeletions = min(minDeletions, deletions);
        }
        return minDeletions;
    }
};
